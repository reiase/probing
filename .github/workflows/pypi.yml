# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Trunk install
      uses: jetli/trunk-action@v0.5.0
      with:
        version: 'latest'
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@nightly # Changed from stable in pypi.yml, user kept nightly
      with:
        target: wasm32-unknown-unknown, x86_64-unknown-linux-gnu
    # - name: Install Zig toolchain
    #   uses: mlugg/setup-zig@v2

    # Cache and Install Dependencies
    - name: Restore Cargo Cache
      id: cache-restore
      uses: actions/cache/restore@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: ${{ runner.os }}-cargo-tools
    - name: Install system and Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel toml zig-bin==0.13.0 ziglang==0.13.0 cargo-zigbuild
        # Install cargo-zigbuild and rnr if not already cached
        # test -e ~/.cargo/bin/cargo-zigbuild || cargo install cargo-zigbuild
        test -e ~/.cargo/bin/rnr || cargo install rnr
        test -e ~/.cargo/bin/cargo-nextest || cargo install cargo-nextest
    - name: Save Cargo Cache
      id: cache-save
      uses: actions/cache/save@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: ${{ steps.cache-restore.outputs.cache-primary-key || format('{0}-cargo-{1}', runner.os, github.run_id) }} # Fallback key
    
    - name: Build package
      run: |
        make ZIG=1 wheel
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        packages-dir: dist/
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
